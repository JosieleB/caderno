---
title: "Anova de dois fatores ou mais"
---

A ANOVA de dois fatores é usada quando queremos analisar o efeito de dois fatores diferentes ao mesmo tempo. No nosso exemplo, estamos analisando o efeito do tratamento e da dose no nível de severidade de uma doença (por exemplo, fungos em plantas).

### Pressupostos da ANOVA de dois fatores

Antes de aplicar a ANOVA de dois fatores, devemos garantir que os dados atendem aos seguintes pressupostos:

1.  Normalidade: Os dados devem seguir uma distribuição normal (testado usando o teste de Shapiro-Wilk nos resíduos).
2.  Independência: As amostras devem ser aleatórias e independentes.
3.  Homogeneidade das Variâncias: As variâncias entre os grupos devem ser semelhantes (testado utilizando o Teste de Bartlett ou Levene).

Pacotes que ainda não foram usados neste site e precisam ser instalados

```{r, echo=TRUE, eval=FALSE}
install.packages("epifitter")
install.packages("DHARMa")
install.packages("performance")


```

### Visualizando os Dados

A primeira coisa a fazer é visualizar os dados usando gráficos para entender sua distribuição.

```{r, message=FALSE, warning=FALSE}
library(ggplot2)
library(gsheet)

# Carregando os dados
fung_vaso <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=2023059672#gid=2023059672")

# Visualizando os dados com um gráfico de jitter
fung_vaso |> 
  ggplot(aes(factor(dose), severity*100)) +  # Transformando dose em um fator
  geom_jitter(width = 0.1) +  # Adicionando dispersão para visualização
  facet_wrap(~ treat)  # Dividindo por tratamento
```

### Realizando a ANOVA de dois fatores

Agora, vamos realizar a ANOVA de dois fatores para testar se existe uma diferença significativa na severidade da doença, levando em consideração tanto o tratamento quanto a dose.

```{r, message=FALSE, warning=FALSE}
# Ajustando o modelo de ANOVA de dois fatores
m_anti <- lm(severity ~ treat * dose, data = fung_vaso)

# Realizando a ANOVA
anova(m_anti)

```

### Verificando os resíduos

Antes de interpretar os resultados, é importante verificar se os pressupostos de normalidade e homogeneidade das variâncias são atendidos.

```{r, message=FALSE, warning=FALSE}
# Carregando o pacote DHARMa
library(DHARMa)

# Verificando os resíduos da ANOVA
plot(simulateResiduals(m_anti))  # Visualizando os resíduos

```

### Estimativas de médias

Agora, podemos usar o pacote `emmeans` para calcular as médias ajustadas e realizar comparações entre os grupos, levando em consideração o efeito combinado de tratamento e dose.

```{r, message=FALSE, warning=FALSE}
library(emmeans)
library(multcomp)

# Realizando estimativas das médias ajustadas para cada tratamento dentro das doses
media_anti <- emmeans(m_anti, ~ treat | dose)
media_anti  # Exibindo as médias ajustadas

# Comparações estatísticas entre os grupos
cld(media_anti)  # Exibindo as letras compactas para comparações

# Realizando a decomposição das médias por dose dentro de cada tratamento
media_anti <- emmeans(m_anti, ~ dose | treat)
media_anti  # Exibindo as médias ajustadas por dose

# Comparações estatísticas entre os grupos
cld(media_anti)  # Exibindo as letras compactas para comparações


```

### Visualizando a interação

Podemos verificar visualmente se existe uma interação entre o tratamento e a dose. Uma maneira simples de fazer isso é utilizando um gráfico de interação.

```{r, message=FALSE, warning=FALSE}
# Gráfico de interação
interaction.plot(fung_vaso$treat, fung_vaso$dose, fung_vaso$severity)

```

Se as linhas no gráfico não forem paralelas, isso indica uma interação significativa entre os fatores. Se forem paralelas, a interação é provavelmente não significativa.

A ANOVA fatorial é uma técnica estatística usada para analisar o impacto de dois ou mais fatores (variáveis independentes) sobre uma variável dependente, considerando tanto os efeitos principais de cada fator quanto as possíveis interações entre os fatores.

-   Efeitos principais: Analisam o impacto de cada fator isoladamente.
-   Interação: Verifica se o efeito de um fator depende do nível de outro fator.

Neste exemplo, a ANOVA fatorial será utilizada para analisar o impacto de três fatores: tratamento, dose e irrigação, na severidade de uma doença (representada pela AUDPC - Área Sob a Curva do Progresso da Doença). O objetivo é entender como esses fatores e suas interações afetam a severidade da doença.

### Expansão da Análise

Agora, vamos expandir a análise para incluir um terceiro fator: o tipo de irrigação. Realizaremos a ANOVA fatorial para três fatores: tratamento, dose e irrigação.

A seguir, faremos uma análise detalhada dos efeitos principais de cada fator e das interações entre eles na severidade da doença.

```{r, message=FALSE, warning=FALSE}
# Carregar pacotes necessários
library(epifitter)
library(dplyr)
library(ggplot2)
library(emmeans)
library(DHARMa)

# Carregar o conjunto de dados
oidio <- PowderyMildew

# Filtrando os dados para as condições desejadas de irrigação
oidio |> 
  filter(irrigation_type %in% c("MS", "MS above canopy", "Overhead")) |> 
  ggplot(aes(time, sev * 100)) + 
  geom_jitter(width = 0.1) + 
  facet_grid(moisture ~ irrigation_type)  # Visualização dos dados

# Sumarizando a área abaixo da curva (AUDPC) por tratamento e bloco
oidio3 <- oidio |> 
  group_by(irrigation_type, moisture, block) |> 
  summarize(AUDPC = sum(sev))  # Alteração do cálculo de AUDPC para somatório de 'sev' (ou pode ser outra fórmula)

# Visualizando os dados de AUDPC
oidio3 |> 
  filter(irrigation_type %in% c("MS", "MS above canopy", "Overhead")) |> 
  ggplot(aes(irrigation_type, AUDPC, color = moisture)) +
  geom_point(width = 0.1) +
  scale_y_continuous(limits = c(0, 20))  # Ajustando limites do eixo Y

# Realizando a ANOVA fatorial para AUDPC
oidio4 <- oidio3 |> 
  filter(irrigation_type %in% c("MS", "MS above canopy", "Overhead"))

# Ajustando o modelo de ANOVA fatorial
anov_oidio <- lm(AUDPC ~ irrigation_type * moisture, data = oidio4)

# Exibindo os resultados da ANOVA
anova(anov_oidio)

# Verificando os resíduos da ANOVA
plot(simulateResiduals(anov_oidio))

# Estimativas das médias ajustadas
medias_oidio <- emmeans(anov_oidio, ~ irrigation_type | moisture)
medias_oidio  # Exibindo as médias ajustadas

# Comparações das médias ajustadas entre os grupos
cld(medias_oidio)  # Comparação estatística entre os grupos

# Decompondo as médias por 'moisture' dentro de cada tipo de irrigação
medias_oidio2 <- emmeans(anov_oidio, ~ moisture | irrigation_type)
medias_oidio2  # Exibindo as médias ajustadas por 'moisture'

# Comparando as médias ajustadas
cld(medias_oidio2)  # Comparação estatística entre as médias ajustadas

```

|           | H. moisture | M. moisture |
|-----------|-------------|-------------|
| MS        | 8.52 Aa     | 11.18 Ab    |
| MS Ac.    | 3.99 Ba     | 4.86 Bb     |
| Overhead  | 3.68 Ba     | 3.81 Ca     |
| CV = 6.41 |             |             |

```{r, message=FALSE, warning=FALSE}
# Carregando pacotes necessários
library(tidyverse)  # Para manipulação de dados e gráficos
library(readxl)     # Para ler arquivos Excel
library(Hmisc)      # Para análise estatística

# Carregando os dados da planilha Excel
fung_campo <- gsheet2tbl ("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=866852711#gid=866852711")

# Visualização dos dados com um gráfico de dispersão
fung_campo |> 
  mutate (TRAT = factor(TRAT)) |>  # Transformando a variável 'TRAT' em fator (para garantir que o R trate os níveis como categorias)
  ggplot(aes(TRAT, PROD)) +        # Criando o gráfico com 'TRAT' no eixo X e 'PROD' no eixo Y
  geom_jitter(width = 0.2) +       # Adicionando dispersão nos pontos para visualização
  stat_summary(                    # Adicionando a linha de média com intervalo de confiança
    fun.data = "mean_cl_boot",      # Função para calcular a média com intervalo de confiança bootstrap
    colour = "red",                 # Cor da linha de média
    width = 0.3                     # Largura dos pontos
  )

# Transformando as variáveis 'TRAT' e 'BLOCO' em fatores
# (Por padrão, o R interpreta variáveis numéricas como contínuas, mas aqui queremos tratá-las como categorias)
fung_campo$TRAT <- factor(fung_campo$TRAT)
fung_campo$BLOCO <- factor(fung_campo$BLOCO)

# Realizando a ANOVA para verificar o efeito dos fatores 'BLOCO' e 'TRAT' na variável 'PROD' (produção)
anova_campo <- lm(PROD ~ BLOCO + TRAT, data = fung_campo)  # Modelo linear
anova(anova_campo)  # Exibindo a tabela de ANOVA

# Testando os pressupostos da ANOVA: normalidade dos resíduos e homocedasticidade
library(DHARMa)  # Pacote para verificar resíduos

plot(simulateResiduals(anova_campo))  # Simula e plota os resíduos para avaliar se há violação dos pressupostos

# Estimativas das médias ajustadas para o fator 'TRAT' (tratamento)
library(emmeans)  # Para calcular as médias ajustadas
means_campo <- emmeans(anova_campo, ~ TRAT)  # Calcula as médias ajustadas para os tratamentos
means_campo  # Exibe as médias ajustadas

# Teste de médias entre os grupos
library(multcomp)  # Pacote para comparações múltiplas (post-hoc)
cld(means_campo)  # Comparação entre os tratamentos, mostrando as letras compactas para indicar diferenças estatísticas

plot(means_campo)  # Plota as médias ajustadas

# Comparações post-hoc com matriz de significância
pwpp(means_campo)  # Mostra as comparações entre tratamentos
pwpm(means_campo)  # Exibe a matriz de comparações entre os grupos

# Observação: Neste caso, não há diferença estatística significativa, embora haja um grande ganho de produção nos tratamentos. 
# Isso indica que o efeito do tratamento não é estatisticamente significativo, mas o efeito pode ser relevante do ponto de vista prático.

# Analisando o efeito do 'TRAT' sobre a severidade da doença (variável 'FER' - ferrugem)

# Realizando a ANOVA para a severidade (log-transformada para normalizar a distribuição)
anova_fer <- lm(log(FER) ~ BLOCO + TRAT, data = fung_campo)
anova(anova_fer)  # Exibindo a tabela de ANOVA para 'FER'

# Testando os resíduos da ANOVA para 'FER'
plot(simulateResiduals(anova_fer))  # Verificando a normalidade e homocedasticidade

# Estimando as médias ajustadas para 'TRAT' no modelo de severidade
means_fer <- emmeans(anova_fer, ~ TRAT, type = "response")  # Usando 'type = response' para reverter a transformação logarítmica
means_fer  # Exibe as médias ajustadas para 'FER'

# Comparação das médias ajustadas para 'TRAT'
cld(means_fer)  # Comparação entre os tratamentos de severidade, com letras para indicar diferenças

plot(means_fer)  # Plota as médias ajustadas

# Comparações post-hoc com matriz de significância
pwpp(means_fer)  # Mostra as comparações entre os tratamentos de severidade
pwpm(means_fer)  # Exibe a matriz de comparações entre os grupos de severidade

# Calculando o coeficiente de variação do modelo
library(agricolae)  # Pacote para análise agronômica
cv.model(anova_fer)  # Calcula o coeficiente de variação do modelo para severidade

```

