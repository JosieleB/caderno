{
  "hash": "88f13b1f5ce38ac0a6f5794fc48b3536",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Testes Não Paramétricos\"\n---\n\n\n\n\nQuando os dados não seguem uma distribuição normal, ou quando não podemos assumir variâncias homogêneas entre os grupos, é necessário recorrer a testes não paramétricos. Esses testes não dependem de pressupostos fortes sobre a distribuição dos dados, o que os torna uma escolha ideal para situações em que as condições para análises paramétricas, como a ANOVA, não são atendidas.\n\nPacotes que ainda não foram usados neste site e precisam ser instalados\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"agricolae\") \ninstall.packages(\"lme4\") \ninstall.packages(\"performance\") \ninstall.packages(\"report\")\n```\n:::\n\n\n\n\n### os dados não são normais, o que eu faço?\n\nPrimeiro, precisamos verificar se os dados seguem uma distribuição normal. Se não, podemos usar transformações ou recorrer a testes não paramétricos. Vamos ver como verificar a normalidade e como proceder:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Carregando os dados do pacote InsectSprays\nlibrary(agricolae)\nlibrary(ggplot2)\ninsetos <- InsectSprays\nView(insetos)\n\n# Visualizando os dados com um gráfico de boxplot e jitter\ninsetos |> \n  ggplot(aes(spray, count)) +\n  geom_boxplot(outlier.color = NA) +   # Removendo outliers no boxplot\n  geom_jitter(width = 0.1)             # Adicionando dispersão nos pontos\n```\n\n::: {.cell-output-display}\n![](testenp_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Ajustando um modelo linear para verificar o efeito do tipo de spray no número de insetos mortos\nm2 <- lm(count ~ spray, data = insetos) \n\n# Verificando os resíduos do modelo\nhist(residuals(m2))  # Histograma dos resíduos\n```\n\n::: {.cell-output-display}\n![](testenp_files/figure-html/unnamed-chunk-2-2.png){width=672}\n:::\n\n```{.r .cell-code}\nshapiro.test(residuals(m2))  # Teste de normalidade de Shapiro-Wilk\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tShapiro-Wilk normality test\n\ndata:  residuals(m2)\nW = 0.96006, p-value = 0.02226\n```\n\n\n:::\n\n```{.r .cell-code}\n# Teste de Bartlett para verificar se as variâncias são homogêneas\nbartlett.test(count ~ spray, data = insetos)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tBartlett test of homogeneity of variances\n\ndata:  count by spray\nBartlett's K-squared = 25.96, df = 5, p-value = 9.085e-05\n```\n\n\n:::\n\n```{.r .cell-code}\n# Verificando visualmente se os resíduos seguem uma distribuição normal\nqqnorm(residuals(m2))  # Q-Q plot para os resíduos\nqqline(residuals(m2))   # Linha de referência no Q-Q plot\n```\n\n::: {.cell-output-display}\n![](testenp_files/figure-html/unnamed-chunk-2-3.png){width=672}\n:::\n:::\n\n\n\n\nSe os dados não atenderem aos pressupostos de normalidade ou homocedasticidade, podemos aplicar transformações nos dados ou usar testes não paramétricos.\n\n### Alternativa 1 - Transformação dos Dados\n\nUma opção para lidar com dados não normais é transformar os dados. Uma transformação comum é a raiz quadrada, que pode ajudar a normalizar a distribuição dos dados.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(report)\nlibrary(emmeans)\nlibrary(multcomp)\n# Aplicando transformação de raiz quadrada nos dados\nm3 <- lm(sqrt(count) ~ spray, data = insetos)\n\n# Teste de normalidade nos resíduos após transformação\nshapiro.test(residuals(m3))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tShapiro-Wilk normality test\n\ndata:  residuals(m3)\nW = 0.98721, p-value = 0.6814\n```\n\n\n:::\n\n```{.r .cell-code}\nhist(residuals(m3))   # Visualização da distribuição dos resíduos\n```\n\n::: {.cell-output-display}\n![](testenp_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\nqqnorm(residuals(m3))  # Q-Q plot dos resíduos\nqqline(residuals(m3))   # Linha de referência no Q-Q plot\n```\n\n::: {.cell-output-display}\n![](testenp_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Teste de Bartlett para homogeneidade de variâncias após transformação\nbartlett.test(sqrt(count) ~ spray, data = insetos)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tBartlett test of homogeneity of variances\n\ndata:  sqrt(count) by spray\nBartlett's K-squared = 3.7525, df = 5, p-value = 0.5856\n```\n\n\n:::\n\n```{.r .cell-code}\n# Realizando ANOVA no modelo transformado\nanova(m3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Variance Table\n\nResponse: sqrt(count)\n          Df Sum Sq Mean Sq F value    Pr(>F)    \nspray      5 88.438 17.6876  44.799 < 2.2e-16 ***\nResiduals 66 26.058  0.3948                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n\n```{.r .cell-code}\n# Relatório do modelo ajustado\nreport(m3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nWe fitted a linear model (estimated using OLS) to predict count with spray\n(formula: sqrt(count) ~ spray). The model explains a statistically significant\nand substantial proportion of variance (R2 = 0.77, F(5, 66) = 44.80, p < .001,\nadj. R2 = 0.76). The model's intercept, corresponding to spray = A, is at 3.76\n(95% CI [3.40, 4.12], t(66) = 20.73, p < .001). Within this model:\n\n  - The effect of spray [B] is statistically non-significant and positive (beta =\n0.12, 95% CI [-0.40, 0.63], t(66) = 0.45, p = 0.653; Std. beta = 0.04, 95% CI\n[-0.15, 0.23])\n  - The effect of spray [C] is statistically significant and negative (beta =\n-2.52, 95% CI [-3.03, -2.00], t(66) = -9.81, p < .001; Std. beta = -0.94, 95%\nCI [-1.13, -0.75])\n  - The effect of spray [D] is statistically significant and negative (beta =\n-1.60, 95% CI [-2.11, -1.08], t(66) = -6.22, p < .001; Std. beta = -0.59, 95%\nCI [-0.79, -0.40])\n  - The effect of spray [E] is statistically significant and negative (beta =\n-1.95, 95% CI [-2.46, -1.44], t(66) = -7.61, p < .001; Std. beta = -0.73, 95%\nCI [-0.92, -0.54])\n  - The effect of spray [F] is statistically non-significant and positive (beta =\n0.26, 95% CI [-0.25, 0.77], t(66) = 1.01, p = 0.318; Std. beta = 0.10, 95% CI\n[-0.09, 0.29])\n\nStandardized parameters were obtained by fitting the model on a standardized\nversion of the dataset. 95% Confidence Intervals (CIs) and p-values were\ncomputed using a Wald t-distribution approximation.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Estimando médias ajustadas e destransformando os resultados\nm33 <- emmeans(m3, ~ spray, type = \"response\")  # Desfazendo a transformação\nplot(m33)\n```\n\n::: {.cell-output-display}\n![](testenp_files/figure-html/unnamed-chunk-3-3.png){width=672}\n:::\n\n```{.r .cell-code}\ncld(m33)  # Comparações de médias ajustadas entre os grupos\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n spray response    SE df lower.CL upper.CL .group\n C         1.55 0.452 66    0.779     2.58  1    \n E         3.27 0.656 66    2.095     4.72  12   \n D         4.68 0.785 66    3.248     6.38   2   \n A        14.14 1.360 66   11.550    17.00    3  \n B        15.03 1.410 66   12.352    17.97    3  \n F        16.15 1.460 66   13.370    19.19    3  \n\nConfidence level used: 0.95 \nIntervals are back-transformed from the sqrt scale \nNote: contrasts are still on the sqrt scale. Consider using\n      regrid() if you want contrasts of back-transformed estimates. \nP value adjustment: tukey method for comparing a family of 6 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n```\n\n\n:::\n:::\n\n\n\n\n### Alternativa 2 - Testes Não Paramétricos\n\nQuando os dados não podem ser transformados para normalizar sua distribuição, a solução é recorrer a testes não paramétricos. Um dos testes mais comuns para comparação de medianas entre dois ou mais grupos é o Teste de Kruskal-Wallis.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Teste de Kruskal-Wallis para comparar os grupos\nkruskal.test(count ~ spray, data = insetos)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tKruskal-Wallis rank sum test\n\ndata:  count by spray\nKruskal-Wallis chi-squared = 54.691, df = 5, p-value = 1.511e-10\n```\n\n\n:::\n\n```{.r .cell-code}\n# Utilizando o pacote agricolae para comparações pós-hoc entre os grupos\nlibrary(agricolae)\nkruskal(insetos$count, insetos$spray, group = TRUE, console = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nStudy: insetos$count ~ insetos$spray\nKruskal-Wallis test's\nTies or no Ties\n\nCritical Value: 54.69134\nDegrees of freedom: 5\nPvalue Chisq  : 1.510845e-10 \n\ninsetos$spray,  means of the ranks\n\n  insetos.count  r\nA      52.16667 12\nB      54.83333 12\nC      11.45833 12\nD      25.58333 12\nE      19.33333 12\nF      55.62500 12\n\nPost Hoc Analysis\n\nt-Student: 1.996564\nAlpha    : 0.05\nMinimum Significant Difference: 8.462804 \n\nTreatments with the same letter are not significantly different.\n\n  insetos$count groups\nF      55.62500      a\nB      54.83333      a\nA      52.16667      a\nD      25.58333      b\nE      19.33333     bc\nC      11.45833      c\n```\n\n\n:::\n:::\n\n\n\n\n*O teste de Kruskal-Wallis é o equivalente não paramétrico da ANOVA e é utilizado quando os dados são ordinais ou não atendem às suposições de normalidade. Ele verifica se existem diferenças significativas entre as medianas dos grupos. Após esse teste, se for detectada diferença, realizamos comparações múltiplas para entender quais grupos são significativamente diferentes.*\n\n### Alternativa 3 - Modelos Lineares Generalizados (GLM)\n\nSe preferirmos continuar com uma abordagem paramétrica, mas nossos dados não atenderem às suposições da ANOVA, podemos usar Modelos Lineares Generalizados (GLM). Por exemplo, para dados de contagem, podemos usar a distribuição de Poisson.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(DHARMa)\n# Ajustando um modelo de Poisson para dados de contagem\nm2.3 <- glm(count ~ spray, data = insetos, family = poisson)\n\n# Exibindo a ANOVA para o modelo de Poisson\nanova(m2.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Deviance Table\n\nModel: poisson, link: log\n\nResponse: count\n\nTerms added sequentially (first to last)\n\n      Df Deviance Resid. Df Resid. Dev  Pr(>Chi)    \nNULL                     71     409.04              \nspray  5   310.71        66      98.33 < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n\n```{.r .cell-code}\n# Usando o pacote car para uma ANOVA mais detalhada\nlibrary(car)\nAnova(m2.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Deviance Table (Type II tests)\n\nResponse: count\n      LR Chisq Df Pr(>Chisq)    \nspray   310.71  5  < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n\n```{.r .cell-code}\n# Verificando os resíduos do modelo de Poisson\nplot(simulateResiduals(m2.3))\n```\n\n::: {.cell-output-display}\n![](testenp_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Estimativas de médias ajustadas para o modelo de Poisson\nmedias_m2.3 <- emmeans(m2.3, ~ spray, type = \"response\")\nmedias_m2.3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n spray  rate    SE  df asymp.LCL asymp.UCL\n A     14.50 1.100 Inf     12.50     16.82\n B     15.33 1.130 Inf     13.27     17.72\n C      2.08 0.417 Inf      1.41      3.08\n D      4.92 0.640 Inf      3.81      6.35\n E      3.50 0.540 Inf      2.59      4.74\n F     16.67 1.180 Inf     14.51     19.14\n\nConfidence level used: 0.95 \nIntervals are back-transformed from the log scale \n```\n\n\n:::\n\n```{.r .cell-code}\ncld(medias_m2.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n spray  rate    SE  df asymp.LCL asymp.UCL .group\n C      2.08 0.417 Inf      1.41      3.08  1    \n E      3.50 0.540 Inf      2.59      4.74  12   \n D      4.92 0.640 Inf      3.81      6.35   2   \n A     14.50 1.100 Inf     12.50     16.82    3  \n B     15.33 1.130 Inf     13.27     17.72    3  \n F     16.67 1.180 Inf     14.51     19.14    3  \n\nConfidence level used: 0.95 \nIntervals are back-transformed from the log scale \nP value adjustment: tukey method for comparing a family of 6 estimates \nTests are performed on the log scale \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n```\n\n\n:::\n:::\n\n\n\n\nO GLM com distribuição de Poisson é adequado para dados de contagem, como o número de insetos mortos por tipo de spray. Esse modelo é mais flexível que a ANOVA e pode lidar com dados de contagem de forma eficiente.\n\n## Box-Cox\n\n### O que é o Box-Cox?\n\nO **Box-Cox** é uma técnica de transformação de dados que busca estabilizar a variância e transformar os dados para aproximá-los de uma distribuição normal. Ele permite que você teste diferentes valores de lambda para encontrar a transformação ideal.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Aplicando o Box-Cox para encontrar o melhor valor de lambda\n\nboxcox(lm(insetos$count+0.1 ~1))  # Adicionando 0.1 para garantir que os valores são positivos\n```\n\n::: {.cell-output-display}\n![](testenp_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\nb <- boxcox(lm(insetos$count+0.1 ~1))\n\n# Encontrando o valor de lambda que maximiza a função de verossimilhança\nlambda <- b$x[which.max(b$y)] \nlambda\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.4242424\n```\n\n\n:::\n\n```{.r .cell-code}\n# Transformando os dados com o valor de lambda obtido\nlibrary(tidyverse) \ninsetos <- insetos |> \n  mutate(count2 = (count^lambda - 1)/lambda) |> \n  mutate(count3 = (sqrt(count))) \n\n# Visualizando o histograma da variável transformada\nhist(insetos$count2)\n```\n\n::: {.cell-output-display}\n![](testenp_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n:::\n",
    "supporting": [
      "testenp_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}